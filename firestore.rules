rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Authentication check helper function
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // User ID check helper function
    function isUserAuthenticated(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Admin check helper function (you'll need to implement this with custom claims)
    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }
    
    // Jobs collection rules
    match /jobs/{jobId} {
      // Anyone can read jobs
      allow read: if true;
      
      // Only admins can create, update, or delete jobs
      allow create, update, delete: if isAdmin();
    }
    
    // Bookmarks collection rules
    match /bookmarks/{bookmarkId} {
      // Users can read their own bookmarks
      allow read: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Users can create their own bookmarks
      allow create: if isAuthenticated() && 
                     request.resource.data.userId == request.auth.uid;
      
      // Users can delete their own bookmarks
      allow delete: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid;
    }
    
    // Users collection rules (for additional user data)
    match /users/{userId} {
      // Users can read and write their own data
      allow read, write: if isUserAuthenticated(userId);
      
      // Admins can read all user data
      allow read: if isAdmin();
    }
  }
}